#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# Support module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    Dec 14, 2022 05:11:49 PM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *

import unknown
import analysis


_debug = True # False to eliminate debug printing from callback functions.

def main(*args):
    '''Main entry point for the application.'''
    global root
    root = tk.Tk()
    root.protocol( 'WM_DELETE_WINDOW' , root.destroy)

    # Creates a toplevel widget.
    global _top1, _w1
    _top1 = root
    _w1 = unknown.Homepage(_top1)

    # Creates a toplevel widget.
    global _top2, _w2
    # _top2 = tk.Toplevel(root)
    # _w2 = unknown.Toplevel1(_top2)

    # Creates a toplevel widget.
    global _top3, _w3
    # _top3 = tk.Toplevel(root)
    # _w3 = unknown.DetailWin(_top3)
    root.mainloop()

def RecordMenu(*args):
    if _debug:
        print('unknown_support.RecordMenu')
        _top2 = tk.Toplevel(root)
        _w2 = unknown.Toplevel1(_top2)
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def UserWin(*args):
    if _debug:
        print('unknown_support.UserWin')
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def checkAnalysis(*args):
    if _debug:
        print('unknown_support.checkAnalysis')
        analysis.startAnalysis()
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def checkRecord(*args):
    if _debug:
        print('unknown_support.checkRecord')
        # 連到記錄明細視窗
        _top3 = tk.Toplevel(root)
        _w3 = unknown.DetailWin(_top3)
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()

def toHomepage(*args):
    if _debug:
        # 關閉視窗 回到首頁
        _top2.destroy()
        for arg in args:
            print ('    another arg:', arg)
        sys.stdout.flush()


def BarcodeWin(*args):
    _top4 = tk.Toplevel(root)
    _w4 = unknown.BarcodeWin(_top4)


if __name__ == '__main__':
    unknown.start_up()


